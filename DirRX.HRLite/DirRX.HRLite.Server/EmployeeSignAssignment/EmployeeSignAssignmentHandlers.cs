using System;
using System.Collections.Generic;
using System.Linq;
using Sungero.Company;
using Sungero.Core;
using Sungero.CoreEntities;
using Sungero.Docflow;
using DirRX.HRLite.EmployeeSignAssignment;

namespace DirRX.HRLite
{
  partial class EmployeeSignAssignmentServerHandlers
  {

    public override void Created(Sungero.Domain.CreatedEventArgs e)
    {
      _obj.SignatureType = SignatureType.Approval.ToString();
    }

    public override void BeforeComplete(Sungero.Workflow.Server.BeforeCompleteEventArgs e)
    {
      var documents = _obj.DocumentGroup.BilaterialDocuments.Concat(_obj.AddendaGroup.BilaterialDocuments).Select(d => InternalDocumentBases.As(d)).ToList();
      
      // При выполнении задания с результатом "Подписать" проверить, что на документах есть утверждающая подпись исполнителя задания.
      if (_obj.Result.Value == EmployeeSignAssignment.Result.Sign)
      {
        foreach (var document in documents)
        {
          var hasApprovalSignatures = Signatures.Get(document.LastVersion).Any(x => x.SignatureType == SignatureType.Approval && x.SignatoryFullName == _obj.Performer.Name);
          if (!hasApprovalSignatures && !Functions.Module.IsUserInTestRole())
            e.AddError(SignTasks.Resources.NeedApprovalSignatureFormat(document.Name));
        }
        
        // Обновить свзяки документов с сотрудником.
        Functions.Module.CreateOrUpdateEmployeeDocumentLink(Employees.As(_obj.Performer), documents, DirRX.HRLite.EmployeeDocumentLink.Status.Signed);
      }
      
      // При выполнении задания с результатом "Отказать" проверить, что в тексте задания укзаан причина отказа.
      if (_obj.Result.Value == EmployeeSignAssignment.Result.Refuse)
      {
        if (_obj.Texts.Last().IsAutoGenerated.Value)
          e.AddError(SignTasks.Resources.ErrorTextRefuseNoActiveText);
        
        // Обновить свзяки документов с сотрудником.
        Functions.Module.CreateOrUpdateEmployeeDocumentLink(Employees.As(_obj.Performer), documents, DirRX.HRLite.EmployeeDocumentLink.Status.Closed);
      }
    }
  }

}