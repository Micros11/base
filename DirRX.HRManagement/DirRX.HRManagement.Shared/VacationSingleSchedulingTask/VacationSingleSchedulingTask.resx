<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TaskSubject" xml:space="preserve">
    <value>Schedule vacation of {1} for year {0}</value>
  </data>
  <data name="ManagerCheckInstruction" xml:space="preserve">
    <value>1. Get acquainted with the planned vacations of the employee in the "Scheduled Vacations" table part.
2. Click "Show Overlaps" to check vacation overlaps with other employees if required.
3. If you have no remarks, complete the assignment with the "Endorse" result.
4. If you have any remarks, specify them in the assignment description field and complete the assignment with the "For Rework" result.</value>
  </data>
  <data name="ManagerCheckSubject" xml:space="preserve">
    <value>Approve vacation of employee: {0}</value>
  </data>
  <data name="SignStatementAssignmentInstruction" xml:space="preserve">
    <value>1. Review the created letter.
2. If the letter is correct, complete the assignment with the "Sign" result (the letter will be signed automatically upon completion).</value>
  </data>
  <data name="SignStatementAssignmentSubject" xml:space="preserve">
    <value>Review and sign vacation request letter with electronic signature</value>
  </data>
  <data name="PrepareOrderAssignmentInstruction" xml:space="preserve">
    <value>1. Check the order and correct it if necessary.
2. Complete the assignment.</value>
  </data>
  <data name="PrepareOrderAssignmentSubject" xml:space="preserve">
    <value>Check vacation order: {0}</value>
  </data>
  <data name="SignSeoAssignmentInstruction" xml:space="preserve">
    <value>Review the attached order:
1. If the order is correct, complete the assignment with the "Sign" result (the order will be signed automatically upon completion). 
2. If you have any remarks, specify them in the assignment text and complete the assignment with the "For Rework" result.</value>
  </data>
  <data name="SignAssignmentSubject" xml:space="preserve">
    <value>Sign vacation order of {0} with your electronic signature</value>
  </data>
  <data name="VacationDocsReWorkAssignmentInstruction" xml:space="preserve">
    <value>Correct the order in accordance with the specified remarks and complete the assignment with the "Corrected" result.</value>
  </data>
  <data name="VacationDocsReWorkAssignmentSubject" xml:space="preserve">
    <value>Rework vacation order: {0}</value>
  </data>
  <data name="SignEmployeeAssignmentSubject" xml:space="preserve">
    <value>Review vacation order</value>
  </data>
  <data name="SignEmployeeAssignmenInstruction" xml:space="preserve">
    <value>Read the order and complete the assignment with the "Sign" result (the order will be signed automatically upon completion).</value>
  </data>
  <data name="AccounterAssignmentSubject" xml:space="preserve">
    <value>Take necessary actions on vacation: {0}</value>
  </data>
  <data name="SignAllPaperDocAssignmentSubject" xml:space="preserve">
    <value>Have vacation request letter and vacation order of employee {0} signed</value>
  </data>
  <data name="SignAllPaperDocAssignmentInstruction" xml:space="preserve">
    <value>1. Print out the order and have its hard copy signed by the HR manager.
2. Print out the vacation request letter. Have the employee sign the vacation request letter and read the vacation order with signed acknowledgement.
3. Complete the assignment.</value>
  </data>
  <data name="EmployeeSchedulingSubject" xml:space="preserve">
    <value>Schedule vacation for year {0}</value>
  </data>
  <data name="ErrorTextReWorkNoActiveText" xml:space="preserve">
    <value>Enter your remarks in the assignment text before you complete it with the "For Rework" result.</value>
  </data>
  <data name="AbortNotice" xml:space="preserve">
    <value>Scheduling vacation of employee aborted: {0}</value>
  </data>
  <data name="StartShedulingError" xml:space="preserve">
    <value>All vacations of {0} for year {1} are scheduled.</value>
  </data>
  <data name="EmployeeReworkSubject" xml:space="preserve">
    <value>Rework parameters of vacation</value>
  </data>
  <data name="EmployeeSchedulingInstruction" xml:space="preserve">
    <value>Days of vacation available:
{0}</value>
  </data>
  <data name="FillTableInstruction" xml:space="preserve">
    <value>Schedule your vacation for year {0}:
1. Specify the desired dates in the "Scheduled Vacations" table.
2. Click "Show Overlaps" to check vacation overlaps.
3. Complete the assignment.</value>
  </data>
  <data name="FillReworkTableInstruction" xml:space="preserve">
    <value>1. Read the remarks.
2. Correct the parameters of the vacation and complete the assignment with the "Corrected" result.</value>
  </data>
</root>