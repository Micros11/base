<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ManagerAssignmentSubject" xml:space="preserve">
    <value>Prepare to review candidate: {0}</value>
  </data>
  <data name="ManagerAssignmentInstruction" xml:space="preserve">
    <value>1. Read the report on the candidate.
2. If you are ready to review the candidate for employment to your department, confirm it in the assignment text.
3. Complete the assignment.</value>
  </data>
  <data name="PlanMeetingHRAssignmentSubject" xml:space="preserve">
    <value>Record results of department managers' interview with candidate: {0}</value>
  </data>
  <data name="PlanMeetingHRAssignmentInstruction" xml:space="preserve">
    <value>If there are department managers ready to review the candidate:
1. Arrange a meeting with the candidate for the managers. Record the meeting results in the candidate report.
2. Specify the meeting participants and complete the assignment with the "Complete" result.

If there are no department managers ready to review the candidate, or the review procedure must be aborted, complete the assignment with the "Deny" result.</value>
  </data>
  <data name="ManagerReportAssignmentInstruction" xml:space="preserve">
    <value>1. Read the report on the candidate.
2. Record the meeting results in the candidate report and make decision on the employment of the candidate to your department.
3. Complete the assignment.</value>
  </data>
  <data name="ManagerReportAssignmentSubject" xml:space="preserve">
    <value>Record meeting results and make decision on employment: {0}</value>
  </data>
  <data name="SeoReportAssignmentSubject" xml:space="preserve">
    <value>Approve employment of candidate: {0}</value>
  </data>
  <data name="SeoReportAssignmentInstruction" xml:space="preserve">
    <value>Make decision on employment of the candidate:
1. If you decide to employ the candidate, complete the assignment with the "Approve" result.
2. If you decide not to employ the candidate, complete the assignment with the "Deny" result.</value>
  </data>
  <data name="PlanSecurityAssignmentSubject" xml:space="preserve">
    <value>Request necessary documents and information from candidate: {0}</value>
  </data>
  <data name="PlanSecurityAssignmentInstruction" xml:space="preserve">
    <value>1. Request and receive the documents for the Security Department from the candidate.
2. If needed, send the personal data processing agreement to the candidate and make sure it is returned.
3. Complete the assignment with the "Complete" result.

If the review procedure must be aborted, complete the assignment with the "Deny" result.</value>
  </data>
  <data name="SecurityAssignmentSubject" xml:space="preserve">
    <value>Check information on candidate: {0}</value>
  </data>
  <data name="SecurityAssignmentInstruction" xml:space="preserve">
    <value>Read the information on the candidate and enter your recommendations and comments in the assignment text. Complete the assignment.</value>
  </data>
  <data name="PrepareHiringAssignmentSubject" xml:space="preserve">
    <value>Take further actions on candidate employment: {0}</value>
  </data>
  <data name="PrepareHiringAssignmentInstruction" xml:space="preserve">
    <value>Take further actions on candidate employment:
1. If you need to start the employment procedure, click the "Employ" button, fill in the required fields and start the task.
2. If you need to finish the review for now and start the employment procedure later, complete the assignment with the "Add to Reserve" result.
3. If you need to abort the candidate review procedure, complete the assignment with the "Deny" result.</value>
  </data>
  <data name="TaskSubject" xml:space="preserve">
    <value>Candidate review: {0}</value>
  </data>
  <data name="AbortNotice" xml:space="preserve">
    <value>Candidate review complete: {0}</value>
  </data>
  <data name="PlanSeoAssignmentSubject" xml:space="preserve">
    <value>Make decision on employment of candidate: {0}.</value>
  </data>
  <data name="PlanSeoAssignmentInstruction" xml:space="preserve">
    <value>Read the report on the candidate:
1. If there are department managers ready to employ the candidate, discuss the employment with them and record the decision in the assignment text.
2. If there are no department managers ready to employ the candidate, complete the assignment with the "Deny" result.</value>
  </data>
  <data name="ActiveTextOnCreate" xml:space="preserve">
    <value>Please review the candidate.</value>
  </data>
</root>