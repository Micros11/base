<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbortNotice" xml:space="preserve">
    <value>Transfer procedure aborted: {0}</value>
  </data>
  <data name="ApprovalAssignmentSubject" xml:space="preserve">
    <value>Approve changes in employee's terms of employment: {0}</value>
  </data>
  <data name="CheckDocAssignmentInstruction" xml:space="preserve">
    <value>Check the order and supplemental agreement to the employement contract. Correct the documents if required and complete the assignment.</value>
  </data>
  <data name="CheckDocAssignmentSubject" xml:space="preserve">
    <value>Check documents on changing employee working conditions: {0}</value>
  </data>
  <data name="SignAssignmentSubject" xml:space="preserve">
    <value>Sign documents on changes in terms of employment of employee: {0} with an electronic signature</value>
  </data>
  <data name="SignSeoAssignmentInstruction" xml:space="preserve">
    <value>Read the documents: 
1. If the documents are correct, complete the assignment with the "Sign" result (the supplemental agreement and the order will be signed automatically upon completion). 
2. If you have any remarks, specify them in the assignment description field and complete the assignment with the "For Rework" result.</value>
  </data>
  <data name="SignEmployeeAssignmenInstruction" xml:space="preserve">
    <value>Read the documents and complete the assignment with the "Sign" result (the supplemental agreement and the order will be signed automatically upon completion).</value>
  </data>
  <data name="ReWorkDocsAssignmentSubject" xml:space="preserve">
    <value>Rework documents on changes in employee's terms of employment: {0}</value>
  </data>
  <data name="ReWorkDocsAssignmentInstruction" xml:space="preserve">
    <value>Correct the documents in accordance with the specified remarks and complete the assignment with the "Corrected" result.</value>
  </data>
  <data name="PreparingAssignmentSubject" xml:space="preserve">
    <value>Take necessary actions on transfer: {0}</value>
  </data>
  <data name="TransferTaskSubject" xml:space="preserve">
    <value>Change employee's terms of employment: {0}</value>
  </data>
  <data name="HRApprovalAssignmentInstruction" xml:space="preserve">
    <value>Review the parameters of the letter:
1. If you have any remarks, correct the parameters of the letter and complete the assignment with the "Approve" result.
2. If the parameters are correct, make sure that the "Transfer date" field is filled in and complete the task with the "Approve" result.
3. If the letter should be denied, specify the reason in the assignment text and complete the assignment with the "Deny" result.</value>
  </data>
  <data name="SignStatementAssignmentInstruction" xml:space="preserve">
    <value>Review the created letter:
1. If the letter is correct, complete the assignment with the "Sign" result (the letter will be signed automatically upon completion).
2. If you have any remarks, specify them in the assignment text and complete the assignment with the "For Reapproval" result.</value>
  </data>
  <data name="SignStatementAssignmentSubject" xml:space="preserve">
    <value>Review and sign transfer request letter with electronic signature</value>
  </data>
  <data name="HRManagerApprovalAssignmentInstruction" xml:space="preserve">
    <value>Review the parameters of the letter:
1. If the parameters are correct, complete the task with the "Approve" result.
2. If you have any remarks or the transfer request letter should be denied, complete the assignment with the "Deny" result.</value>
  </data>
  <data name="DeniedNoticeSubject" xml:space="preserve">
    <value>Changes in terms of employment of employee aborted: {0}</value>
  </data>
  <data name="SignAllPaperDocAssignmentInstruction" xml:space="preserve">
    <value>1. Print out the supplemental agreement and order, and have their paper copies signed by the HR manager.
2. Have the paper copy of the supplemental agreement signed by the employee. Have the employee acquainted with the order with signed acknowledgement. Complete the assignment.</value>
  </data>
  <data name="SignAllPaperDocAssignmentSubject" xml:space="preserve">
    <value>Have printed documents signed by employee: {0}</value>
  </data>
  <data name="SignPaperAddAgreementAssignmentSubject" xml:space="preserve">
    <value>Have supplemental agreement signed by the employee: {0}</value>
  </data>
  <data name="SignPaperAddAgreementAssignmentInstruction" xml:space="preserve">
    <value>1. Print out the supplemental agreement and have its paper copy signed by the HR manager.
2. Have the paper copy of the supplemental agreement signed by the employee. Complete the assignment.</value>
  </data>
  <data name="ErrorTextReWorkNoActiveText" xml:space="preserve">
    <value>Enter your remarks in the assignment text before you complete it with the "For Rework" result.</value>
  </data>
  <data name="ErrorTextRefuseNoActiveText" xml:space="preserve">
    <value>Specify the reason for denial in the assignment text before you complete the assignment with the "Deny" result.</value>
  </data>
  <data name="CurrentManagerApprovalAssignmentInstruction" xml:space="preserve">
    <value>Read the request to change the employee's terms of employment: 
1. If the changes in terms of employment are related to the transfer of the employee to another department, select the "Transfer to another department" checkbox. 
2. If the document is correct, specify terms of employment change date, and then complete the assignment with the "Approve" result.
3. If you have any remarks, specify them in the assignment description field and complete the assignment with the "For Rework" result.
4. If the letter should be denied, specify the reason in the assignment text and complete the assignment with the "Deny" result.</value>
  </data>
  <data name="NewManagerApprovalAssignmentInstruction" xml:space="preserve">
    <value>Read the employee transfer parameters:
1. If the transfer parameters are correct, complete the assignment with the "Approve" result.
2. If you have any remarks, specify them in the assignment text and complete the assignment with the "For Rework" result.
3. If you want to deny the transfer, specify the reason in the assignment text and complete the assignment with the "Deny" result.</value>
  </data>
  <data name="AccountResponsibleAssignmentInstruction" xml:space="preserve">
    <value>Do the necessary financial operations and complete the assignment.</value>
  </data>
  <data name="ErrorTextReApproveNoActiveText" xml:space="preserve">
    <value>Enter your remarks in the assignment text before you complete it with the "For Reapproval" result.</value>
  </data>
  <data name="ReApproveAssignmentInstruction" xml:space="preserve">
    <value>Read the remarks:
1. Correct the parameters of the letter, if necessary, and complete the assignment with the "Approve" result.
2. If the letter should be denied, specify the reason in the assignment text and complete the assignment with the "Deny" result.</value>
  </data>
  <data name="ActiveTextOnCreate" xml:space="preserve">
    <value>Please approve the transfer of the employee.</value>
  </data>
  <data name="SignEmployeeAssignmentSubject" xml:space="preserve">
    <value>Sign documents on changes in terms of employment with an electronic signature</value>
  </data>
  <data name="NeedGenerateOrderAndAgreement" xml:space="preserve">
    <value>Generate HR documents before you send the task.</value>
  </data>
  <data name="EmptyActiveTextError" xml:space="preserve">
    <value>Specify what you want to change in terms of employment in the task text.</value>
  </data>
  <data name="TransferTaskStartRoleError" xml:space="preserve">
    <value>Initiator of a task to change the employee's terms of employment cannot be a manager and {0} at the same time.</value>
  </data>
  <data name="SupplyResponsibleAssignmentInstruction" xml:space="preserve">
    <value>Provide the employee with the required goods and equipment and complete the assignment.</value>
  </data>
  <data name="SecurityResponsibleAssignmentInstruction" xml:space="preserve">
    <value>Configure the employee's clearance level and access rights in accordance with the transfer and complete the assignment.</value>
  </data>
  <data name="ITResponsibleAssignmentInstruction" xml:space="preserve">
    <value>1. Grant the employee required access rights.
2. Update the information on the employee's department and job title.
3. Provide the employee with the required goods, equipment, and software. 
4. Complete the assignment.</value>
  </data>
  <data name="TransferStartError" xml:space="preserve">
    <value>Employee can be transferred to another department only upon his or her approval.</value>
  </data>
  <data name="TranferTaskStartedManagersNotice" xml:space="preserve">
    <value>Changes in terms of employment of employee started: {0}</value>
  </data>
  <data name="EmployeeStatemantAssignmentSubject" xml:space="preserve">
    <value>Approve changes in terms of employment</value>
  </data>
  <data name="ManagersReworkNotice" xml:space="preserve">
    <value>Changes in terms of employment of employee corrected: {0}</value>
  </data>
  <data name="ReWorkPrepareDocAssignmentSubject" xml:space="preserve">
    <value>Rework documents on changes in employee's terms of employment: {0}</value>
  </data>
  <data name="TransferApprovednotice" xml:space="preserve">
    <value>Changes in terms of employment of employee approved: {0}</value>
  </data>
  <data name="TransferTaskStartedNotice" xml:space="preserve">
    <value>changes in terms of employment started</value>
  </data>
  <data name="TransferReWorkSubject" xml:space="preserve">
    <value>Rework desired changes in terms of employment</value>
  </data>
  <data name="EmployeeDeniedNoticeSubject" xml:space="preserve">
    <value>{0} did not accept changes in terms of employment</value>
  </data>
  <data name="HRTaskInstruction" xml:space="preserve">
    <value>1. Specify parameters of changes in the employee's terms of employment.
2. If changes in terms of employment can be made without approval by the employee, select the "Approval by employee not required" checkbox.
3. If changes in terms of employment are related to the transfer of the employee to another department, select the "Transfer to another department" checkbox and fill in the "New department" and "Job title" fields.
4. Click the "Create Documents" button to generate a supplemental agreement and a terms of employment change order. Correct content of the documents if necessary.</value>
  </data>
  <data name="ManagerTaskInstruction" xml:space="preserve">
    <value>1. Specify parameters of changes in the employee's terms of employment.
2. If changes in terms of employment are related to the transfer of the employee to another department, select the "Transfer to another department" checkbox and fill in the "New department" and "Job title" fields.</value>
  </data>
  <data name="EmployeeTaskInstruction" xml:space="preserve">
    <value>Specify what you want to change in terms of employment in the task text.</value>
  </data>
  <data name="TransferDateError" xml:space="preserve">
    <value>Changes in terms of employment cannot predate the current date.</value>
  </data>
  <data name="EmployeeReWorkInstruction" xml:space="preserve">
    <value>Read the comments left by the approver and correct the desired changes in terms of employment. Complete the assignment.</value>
  </data>
  <data name="EmployeeStetementInstruction" xml:space="preserve">
    <value>Read the attached documents:
1. If you have no remarks on the proposed changes, complete the assignment with the "Approve" result.
2. If you have any remarks, specify them in the assignment text and complete the assignment with the "For Rework" result.
3. If you do not agree with the proposed changes in terms of employment, specify the reason in the assignment text and complete the assignment with the "Deny" result.</value>
  </data>
  <data name="RePrepareDocAssignmentInstruction" xml:space="preserve">
    <value>Read the remarks, correct the documents, and complete the assignment.</value>
  </data>
  <data name="EmployeeSelfStartStetementInstruction" xml:space="preserve">
    <value>Read the attached documents:
1. If you have no remarks on the proposed changes, complete the assignment with the "Approve" result.
2. If you have any remarks, specify them in the assignment text and complete the assignment with the "For Rework" result.
3. If you do not agree with the proposed changes, specify the reason in the assignment text and complete the assignment with the "Abort" result.</value>
  </data>
  <data name="NewManagerReApprovalAssignmentInstruction" xml:space="preserve">
    <value>Read the corrected employee's terms of employment:
1. If you have no remarks, complete the assignment with the "Approve" result.
2. If you have any remarks, specify them in the assignment text and complete the assignment with the "For Rework" result.
3. If you want to deny the approval, specify the reason in the assignment text and complete the assignment with the "Deny" result.</value>
  </data>
  <data name="ManagerReWorkInstruction" xml:space="preserve">
    <value>Read the remarks:
1. Correct parameters of changes in terms of employment. Correct the attached documents. Complete the assignment with the "Corrected" result.
2. If you want to abort approval of changes in terms of employment, specify the reason in the assignment text and complete the assignment with the "Abort" result.</value>
  </data>
  <data name="TransferManagerReWorkSubject" xml:space="preserve">
    <value>Rework employee's terms of employment: {0}</value>
  </data>
  <data name="ReApprovalAssignmentSubject" xml:space="preserve">
    <value>Approve changes in employee's terms of employment: {0}</value>
  </data>
  <data name="CurrentManagerReApprovalAssignmentInstruction" xml:space="preserve">
    <value>Read the corrected changes in the employee's terms of employment:
1. If you have no remarks, specify necessary parameters and complete the assignment with the "Approve" result.
2. If you have any remarks, specify them in the assignment text and complete the assignment with the "For Rework" result.
3. If you want to deny the approval, specify the reason in the assignment text and complete the assignment with the "Deny" result.</value>
  </data>
  <data name="NewManagerApprovalAssignmentSubject" xml:space="preserve">
    <value>Approve changes in employee's terms of employment: {0}</value>
  </data>
  <data name="HRReWorkInstruction" xml:space="preserve">
    <value>Read the remarks:
1. Correct parameters of changes in terms of employment. Correct the attached documents. Complete the assignment with the "Corrected" result.
2. If you want to abort approval of changes in terms of employment, specify the reason in the assignment text and complete the assignment with the "Deny" result.</value>
  </data>
</root>